
                    You are given a set of N types of rectangular 3-D boxes, where the ith box has height h, width w and length l. You task is to create a stack of boxes which is as tall as possible, but you can only stack a box on top of another box if the dimensions of the 2-D base of the lower box are each strictly larger than those of the 2-D base of the higher box. Of course, you can rotate a box so that any side functions as its base.It is also allowable to use multiple instances of the same type of box. You task is to complete the function maxHeight which returns the height of the highest possible stack so formed.

Input:
The first line of input contains an integer T denoting the number of test cases then T test cases follow. Each test case contains an integer N denoting the total no of boxes available. In the next line are 3*N space separated values denoting the height, width and length of the N boxes.

Output:
For each test case in a new line output will be the highest possible stack height which could be formed.

Constraints:
1<=T<=100
1<=N<=100
1<=l,w,h<=100

Example (To be used for expected output) :
Input:
2
4
4 6 7 1 2 3 4 5 6 10 12 32
3
1 2 3 4 5 6 3 4 1

Output
60
15

Note: The Input/Ouput format and Example given are used for system's internal purpose, and should be used by a user for Expected Output only. As it is a function problem, hence a user should not read any input from stdin/console. The task is to complete the function specified, and not to write the full code.
                     
                        ** For More Input/Output Examples Use 'Expected Output' option ** 
                                        
